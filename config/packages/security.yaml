security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_provider:
            id: App\Shared\Infrastructure\Security\UserProvider

    password_hashers:
        App\Course\Domain\Entity\User:
            algorithm: auto

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            host: ^(api\.courses\.([local|com]+)|localhost)$ # localhost -> test behat
            lazy: true
            provider: app_user_provider
            logout: ~
            guard:
                authenticators:
                    - App\Api\Infrastructure\UI\Security\TokenAuthenticator
        admin:
            host: ^admin\.courses\.([local|com]+)$
            lazy: true
            provider: app_user_provider
            logout:
                path: app_logout
            guard:
                authenticators:
                    - App\Admin\Infrastructure\UI\Security\LoginFormAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
